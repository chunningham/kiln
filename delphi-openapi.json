{
  "openapi": "3.0.0",
  "info": {
    "title": "Tezos RPC",
    "description": "Tezos client RPC API.",
    "version": "7.5"
  },
  "paths": {
    "/context/big_maps/{big_map_id}/{script_expr}": {
      "get": {
        "description": "Access the value associated with a key in a big map.",
        "parameters": [
          {
            "name": "big_map_id",
            "in": "path",
            "description": "A big map identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "script_expr",
            "in": "path",
            "description": "script_expr (Base58Check-encoded)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/micheline.007-PsDELPH1.michelson_v1.expression"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "007-PsDELPH1.michelson.v1.primitives": {
        "type": "string",
        "enum": [
          "ADD",
          "IF_NONE",
          "SWAP",
          "set",
          "nat",
          "CHECK_SIGNATURE",
          "IF_LEFT",
          "LAMBDA",
          "Elt",
          "CREATE_CONTRACT",
          "NEG",
          "big_map",
          "map",
          "or",
          "BLAKE2B",
          "bytes",
          "SHA256",
          "SET_DELEGATE",
          "CONTRACT",
          "LSL",
          "SUB",
          "IMPLICIT_ACCOUNT",
          "PACK",
          "list",
          "PAIR",
          "Right",
          "contract",
          "GT",
          "LEFT",
          "STEPS_TO_QUOTA",
          "storage",
          "TRANSFER_TOKENS",
          "CDR",
          "SLICE",
          "PUSH",
          "False",
          "SHA512",
          "CHAIN_ID",
          "BALANCE",
          "signature",
          "DUG",
          "SELF",
          "EMPTY_BIG_MAP",
          "LSR",
          "OR",
          "XOR",
          "lambda",
          "COMPARE",
          "key",
          "option",
          "Unit",
          "Some",
          "UNPACK",
          "NEQ",
          "INT",
          "pair",
          "AMOUNT",
          "DIP",
          "ABS",
          "ISNAT",
          "EXEC",
          "NOW",
          "LOOP",
          "chain_id",
          "string",
          "MEM",
          "MAP",
          "None",
          "address",
          "CONCAT",
          "EMPTY_SET",
          "MUL",
          "LOOP_LEFT",
          "timestamp",
          "LT",
          "UPDATE",
          "DUP",
          "SOURCE",
          "mutez",
          "SENDER",
          "IF_CONS",
          "RIGHT",
          "CAR",
          "CONS",
          "LE",
          "NONE",
          "IF",
          "SOME",
          "GET",
          "Left",
          "CAST",
          "int",
          "SIZE",
          "key_hash",
          "unit",
          "DROP",
          "EMPTY_MAP",
          "NIL",
          "DIG",
          "APPLY",
          "bool",
          "RENAME",
          "operation",
          "True",
          "FAILWITH",
          "parameter",
          "HASH_KEY",
          "EQ",
          "NOT",
          "UNIT",
          "Pair",
          "ADDRESS",
          "EDIV",
          "CREATE_ACCOUNT",
          "GE",
          "ITER",
          "code",
          "AND"
        ]
      },
      "micheline.007-PsDELPH1.michelson_v1.expression": {
        "oneOf": [
          {
            "title": "Int",
            "type": "object",
            "properties": {
              "int": {
                "$ref": "#/components/schemas/bignum"
              }
            },
            "required": [
              "int"
            ]
          },
          {
            "title": "String",
            "type": "object",
            "properties": {
              "string": {
                "$ref": "#/components/schemas/unistring"
              }
            },
            "required": [
              "string"
            ]
          },
          {
            "title": "Bytes",
            "type": "object",
            "properties": {
              "bytes": {
                "type": "string",
                "pattern": "^[a-zA-Z0-9]+$"
              }
            },
            "required": [
              "bytes"
            ]
          },
          {
            "title": "Sequence",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/micheline.007-PsDELPH1.michelson_v1.expression"
            }
          },
          {
            "title": "Generic prim (any number of args with or without annot)",
            "type": "object",
            "properties": {
              "prim": {
                "$ref": "#/components/schemas/007-PsDELPH1.michelson.v1.primitives"
              },
              "args": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/micheline.007-PsDELPH1.michelson_v1.expression"
                }
              },
              "annots": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "prim"
            ]
          }
        ]
      },
      "error": {
        "description": "The full list of error is available with the global RPC `GET errors`"
      },
      "bignum": {
        "title": "Big number",
        "description": "Decimal representation of a big number",
        "type": "string"
      },
      "unistring": {
        "title": "Universal string representation",
        "description": "Either a plain UTF8 string, or a sequence of bytes for strings that contain invalid byte sequences.",
        "oneOf": [
          {
            "type": "string"
          },
          {
            "type": "object",
            "properties": {
              "invalid_utf8_string": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "minimum": 0,
                  "maximum": 255
                }
              }
            },
            "required": [
              "invalid_utf8_string"
            ]
          }
        ]
      }
    }
  }
}
