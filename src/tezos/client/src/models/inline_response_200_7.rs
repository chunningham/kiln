/*
 * Tezos RPC
 *
 * Tezos client RPC API.
 *
 * The version of the OpenAPI document: 7.5
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct InlineResponse2007 {
    /// The level of the block relative to genesis. This is also the Shell's notion of level
    #[serde(rename = "level")]
    pub level: i32,
    /// The level of the block relative to the block that starts protocol alpha. This is specific to the protocol alpha. Other protocols might or might not include a similar notion.
    #[serde(rename = "level_position")]
    pub level_position: i32,
    /// The current cycle's number. Note that cycles are a protocol-specific notion. As a result, the cycle number starts at 0 with the first block of protocol alpha.
    #[serde(rename = "cycle")]
    pub cycle: i32,
    /// The current level of the block relative to the first block of the current cycle.
    #[serde(rename = "cycle_position")]
    pub cycle_position: i32,
    /// The current voting period's index. Note that cycles are a protocol-specific notion. As a result, the voting period index starts at 0 with the first block of protocol alpha.
    #[serde(rename = "voting_period")]
    pub voting_period: i32,
    /// The current level of the block relative to the first block of the current voting period.
    #[serde(rename = "voting_period_position")]
    pub voting_period_position: i32,
    /// Tells wether the baker of this block has to commit a seed nonce hash.
    #[serde(rename = "expected_commitment")]
    pub expected_commitment: bool,
}

impl InlineResponse2007 {
    pub fn new(level: i32, level_position: i32, cycle: i32, cycle_position: i32, voting_period: i32, voting_period_position: i32, expected_commitment: bool) -> InlineResponse2007 {
        InlineResponse2007 {
            level,
            level_position,
            cycle,
            cycle_position,
            voting_period,
            voting_period_position,
            expected_commitment,
        }
    }
}


