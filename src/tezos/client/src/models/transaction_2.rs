/*
 * Tezos RPC
 *
 * Tezos client RPC API.
 *
 * The version of the OpenAPI document: 7.5
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct Transaction2 {
    #[serde(rename = "kind")]
    pub kind: Kind,
    #[serde(rename = "source")]
    pub source: crate::models::SignaturePublicKeyHash,
    /// Decimal representation of a positive big number
    #[serde(rename = "fee")]
    pub fee: String,
    /// Decimal representation of a positive big number
    #[serde(rename = "counter")]
    pub counter: String,
    /// Decimal representation of a positive big number
    #[serde(rename = "gas_limit")]
    pub gas_limit: String,
    /// Decimal representation of a positive big number
    #[serde(rename = "storage_limit")]
    pub storage_limit: String,
    /// Decimal representation of a positive big number
    #[serde(rename = "amount")]
    pub amount: String,
    #[serde(rename = "destination")]
    pub destination: crate::models::Model007PsDelph1ContractId,
    #[serde(rename = "parameters", skip_serializing_if = "Option::is_none")]
    pub parameters: Option<crate::models::TransactionParameters>,
    #[serde(rename = "metadata")]
    pub metadata: crate::models::Transaction2Metadata,
}

impl Transaction2 {
    pub fn new(kind: Kind, source: crate::models::SignaturePublicKeyHash, fee: String, counter: String, gas_limit: String, storage_limit: String, amount: String, destination: crate::models::Model007PsDelph1ContractId, metadata: crate::models::Transaction2Metadata) -> Transaction2 {
        Transaction2 {
            kind,
            source,
            fee,
            counter,
            gas_limit,
            storage_limit,
            amount,
            destination,
            parameters: None,
            metadata,
        }
    }
}

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Kind {
    #[serde(rename = "transaction")]
    Transaction,
}

