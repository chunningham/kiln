/*
 * Tezos RPC
 *
 * Tezos client RPC API.
 *
 * The version of the OpenAPI document: 7.5
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct Backtracked1 {
    #[serde(rename = "status")]
    pub status: Status,
    #[serde(rename = "errors", skip_serializing_if = "Option::is_none")]
    pub errors: Option<Vec<serde_json::Value>>,
    #[serde(rename = "big_map_diff", skip_serializing_if = "Option::is_none")]
    pub big_map_diff: Option<Vec<crate::models::OneOfobjectobjectobjectobject>>,
    #[serde(rename = "balance_updates", skip_serializing_if = "Option::is_none")]
    pub balance_updates: Option<Vec<crate::models::OneOfobjectobjectobjectobject>>,
    #[serde(rename = "originated_contracts", skip_serializing_if = "Option::is_none")]
    pub originated_contracts: Option<Vec<crate::models::Model007PsDelph1ContractId>>,
    /// Decimal representation of a positive big number
    #[serde(rename = "consumed_gas", skip_serializing_if = "Option::is_none")]
    pub consumed_gas: Option<String>,
    /// Decimal representation of a positive big number
    #[serde(rename = "consumed_milligas", skip_serializing_if = "Option::is_none")]
    pub consumed_milligas: Option<String>,
    /// Decimal representation of a big number
    #[serde(rename = "storage_size", skip_serializing_if = "Option::is_none")]
    pub storage_size: Option<String>,
    /// Decimal representation of a big number
    #[serde(rename = "paid_storage_size_diff", skip_serializing_if = "Option::is_none")]
    pub paid_storage_size_diff: Option<String>,
}

impl Backtracked1 {
    pub fn new(status: Status) -> Backtracked1 {
        Backtracked1 {
            status,
            errors: None,
            big_map_diff: None,
            balance_updates: None,
            originated_contracts: None,
            consumed_gas: None,
            consumed_milligas: None,
            storage_size: None,
            paid_storage_size_diff: None,
        }
    }
}

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Status {
    #[serde(rename = "backtracked")]
    Backtracked,
}

